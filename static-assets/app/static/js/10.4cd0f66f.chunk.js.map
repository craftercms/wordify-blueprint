{"version":3,"sources":["components/Slider.js","shared/PostCard.js","../node_modules/react-intl/lib/components/useIntl.js"],"names":["Slider","props","model","posts_o","useRecentPosts","length","useState","currentIndex","setCurrentIndex","component","className","fieldId","key","craftercms","id","index","style","width","tags","showBlurb","format","IMAGE_BACKGROUND","classes","root","innerWrapper","map","onClick","PORTRAIT","LANDSCAPE","LANDSCAPE_COMPRESSED","PostCard","formatDate","useIntl","numOfComments","authorBio_o","headline_s","mainImageAlt_s","categories_o","dateModified","authorModel","postMetaCommon","renderTarget","alt","slug","path","replace","Link","to","src","mainImage_s","backgroundImage","category","value_smv","console","error","intl","useContext","Context","invariantIntlContext"],"mappings":"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","file":"static/js/10.4cd0f66f.chunk.js","sourcesContent":["/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { useState } from 'react';\nimport PostCard, { IMAGE_BACKGROUND } from '../shared/PostCard';\nimport { Field } from '@craftercms/studio-guest/react';\nimport { useRecentPosts } from '../shared/hooks';\n\nfunction Slider(props) {\n\n  const {\n    model\n  } = props;\n\n  let posts_o = useRecentPosts();\n  if (props.model.posts_o.length !== 0) {\n    posts_o = props.model.posts_o;\n  }\n\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const component = posts_o[currentIndex];\n\n  return (\n    <Field model={model} className=\"owl-carousel owl-theme owl-loaded home-slider\">\n      <div className=\"owl-stage-outer\">\n        <Field model={model} fieldId=\"posts_o\" className=\"owl-stage\">\n          <Field\n            key={component.craftercms.id}\n            className=\"owl-item active\"\n            model={model}\n            fieldId=\"posts_o\"\n            index={currentIndex}\n            style={{ width: '100%' }}\n          >\n            <PostCard\n              tags=\"Food\"\n              model={component}\n              showBlurb\n              format={IMAGE_BACKGROUND}\n              classes={{ root: 'height-lg', innerWrapper: 'half-to-full' }}\n            />\n          </Field>\n        </Field>\n        <div className=\"owl-dots\">\n          {\n            posts_o?.map((component, index) =>\n              <button\n                key={index}\n                className={`owl-dot ${index === currentIndex ? 'active' : ''}`}\n                onClick={() => setCurrentIndex(index)}\n              ><span /></button>\n            )\n          }\n        </div>\n      </div>\n    </Field>\n  );\n}\n\nexport default Slider;\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { Field, RenderField } from '@craftercms/studio-guest/react';\n\nexport const\n  PORTRAIT = 'portrait',\n  LANDSCAPE = 'landscape',\n  LANDSCAPE_COMPRESSED = 'landscapeCompressed',\n  IMAGE_BACKGROUND = 'imageBackground';\n\nfunction PostCard(props) {\n  const { formatDate } = useIntl();\n  const {\n    classes,\n    format = PORTRAIT,\n    showBlurb = false,\n    numOfComments,\n    model,\n    model: {\n      authorBio_o,\n      headline_s,\n      mainImageAlt_s = '',\n      categories_o,\n      craftercms: {\n        dateModified\n      }\n    }\n  } = props;\n  const authorModel = authorBio_o?.[0];\n  const postMetaCommon = (\n    <div className=\"post-meta\">\n      <Field\n        component=\"span\"\n        model={model}\n        fieldId=\"authorBio_o\"\n        index={0}\n        className=\"author mr-2\"\n      >\n        <Field component=\"span\" model={authorModel}>\n          <RenderField\n            component=\"img\"\n            model={authorModel}\n            renderTarget=\"src\"\n            fieldId=\"profilePic_s\"\n            alt=\"\"\n          />{' '}\n          <RenderField\n            component=\"span\"\n            model={authorModel}\n            fieldId=\"name_s\"\n          />\n        </Field>\n      </Field>\n      {' • '}<span className=\"mr-2\">{formatDate(dateModified)}</span>\n      {\n        numOfComments &&\n        <>\n          {' • '}<span className=\"ml-2\"><span className=\"fa fa-comments\" /> {numOfComments}</span>\n        </>\n      }\n    </div>\n  );\n  const slug = computeSlug(model.craftercms.path);\n  switch (format) {\n    case PORTRAIT:\n      return (\n        <Field\n          component={Link}\n          model={model}\n          to={slug}\n          className={`blog-entry ${classes?.root ?? ''}`}\n        >\n          <div className=\"img-container\">\n            <RenderField\n              component=\"img\"\n              model={model}\n              renderTarget=\"src\"\n              fieldId=\"mainImage_s\"\n              alt={mainImageAlt_s}\n            />\n          </div>\n          <div className=\"blog-content-body\">\n            {postMetaCommon}\n            <RenderField component=\"h2\" model={model} fieldId=\"headline_s\" />\n          </div>\n        </Field>\n      );\n    case LANDSCAPE:\n      return (\n        <div className=\"post-entry-horizontal\">\n          {/* Notice: Adding the ICE to the above element wouldn't stop\n              the link from navigating when clicked */}\n          <Field component={Link} model={model} to={slug} className={classes?.root}>\n            <RenderField\n              model={model}\n              fieldId=\"mainImage_s\"\n              renderTarget=\"style.backgroundImage\"\n              format={(src) => `url(\"${src}\")`}\n              className=\"image\"\n            />\n            <span className=\"text\">\n              {postMetaCommon}\n              <RenderField component=\"h2\" fieldId=\"headline_s\" model={model} />\n            </span>\n          </Field>\n        </div>\n      );\n    case LANDSCAPE_COMPRESSED:\n      return (\n        <Field component={Link} model={model} to={slug} className={classes?.root}>\n          <RenderField\n            component=\"img\"\n            renderTarget=\"src\"\n            model={model}\n            fieldId=\"mainImage_s\"\n            className=\"mr-4\"\n            alt=\"\"\n          />\n          <div className=\"text\">\n            <RenderField component=\"h4\" model={model} fieldId=\"headline_s\" />\n            <div className=\"post-meta\">\n              <span className=\"mr-2\">{formatDate(dateModified)}</span>\n            </div>\n          </div>\n        </Field>\n      );\n    case IMAGE_BACKGROUND:\n      return (\n        <RenderField\n          model={model}\n          fieldId=\"mainImage_s\"\n          renderTarget=\"style\"\n          className={`a-block d-flex align-items-center ${classes?.root ?? ''}`}\n          format={(mainImage_s) => ({ backgroundImage: `url(\"${mainImage_s}\")` })}\n        >\n          <Field\n            component={Link}\n            model={model}\n            to={slug}\n            className={`text ${classes?.innerWrapper}`}\n          >\n            <div className=\"post-meta\">\n              {\n                categories_o &&\n                <>\n                  {\n                    categories_o?.map(category =>\n                      <span className=\"category\" key={category.key}>{category.value_smv}</span>\n                    )\n                  }\n\n                  {' • '}\n                </>\n              }\n              <span className=\"mr-2\">{formatDate(dateModified)}</span>\n              {\n                numOfComments &&\n                <>\n                  {' • '}<span className=\"ml-2\"><span className=\"fa fa-comments\" /> {numOfComments}\n                </span>\n                </>\n              }\n            </div>\n            <RenderField component=\"h3\" model={model} fieldId=\"headline_s\" />\n            {\n              showBlurb && <RenderField component=\"p\" model={model} fieldId=\"blurb_t\" />\n            }\n          </Field>\n        </RenderField>\n      );\n    default:\n      console.error(`Unknown PostCard format \"${format}\" on post \"${headline_s}\"`);\n      return (\n        <Field component={Link} model={model} to={slug} className={classes?.root}>\n          <h2>{headline_s}</h2>\n        </Field>\n      );\n  }\n}\n\nfunction computeSlug(path) {\n  return path\n    .replace(/(\\/site\\/components)|(index\\.xml)/g, '')\n    .replace(/(\\/site\\/website)|(index\\.xml)/g, '')\n    .replace(/(\\/\\/)/g, '/')\n    .replace('.xml', '');\n}\n\nexport default PostCard;\n","import { useContext } from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    const intl = useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n"],"sourceRoot":""}