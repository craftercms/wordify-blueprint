{"version":3,"sources":["shared/CategoryCard.js","pages/Category.js","shared/SidebarSearch.js","shared/Paginate.js","../../react_components/index.js","../../react_components/PaginationBoxView.js","../../react_components/PageView.js","../../react_components/BreakView.js"],"names":["props","model","category","link","isTag","component","Link","to","key","className","image_s","src","alt","value","CategoryContent","resource","categoryId","data","read","categories","parseDescriptor","taxonomy","items","filter","createTaxonomyFilter","useState","itemsPerPage","currentPage","paginationData","setPaginationData","item","posts","usePosts","map","post","PostCard","craftercms","id","format","LANDSCAPE","pageCount","aria-label","Paginate","onPageChange","index","CategoryCard","match","meta","siteTitle","socialLinks","path","params","useTaxonomiesResource","BaseLayout","fallback","CircularProgressSpinner","screenHeight","SidebarSearch","SidebarBios","fieldId","RecentPostsAside","translations","defineMessages","searchFormPlaceholder","defaultMessage","formatMessage","useIntl","placeholder","classes","form","input","inputWrapper","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","pageRangeDisplayed","marginPagesDisplayed","activeClassName","initialPage","selected","disableInitialCallback","previousLabel","nextLabel","PaginationBoxView","evt","selectedItem","breakLabel","breakClassName","breakLinkClassName","leftSide","rightSide","page","breakView","createPageView","onClick","initialSelected","this","extraAriaContext","console","prevProps","forcePage","forwardJump","backwardJump","pageIndex","hrefBuilder","state","ariaLabelBuilder","label","activeLinkClassName","handlePageSelected","bind","href","ariaLabel","disabledClassName","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","tabIndex","role","onKeyPress","aria-disabled","Component","propTypes","PropTypes","func","defaultProps","PageView","ariaCurrent","aria-current","isRequired","BreakView"],"mappings":"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","file":"static/js/5.e54bd99a.chunk.js","sourcesContent":["\n/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Field } from '@craftercms/studio-guest';\n\nexport default function (props) {\n  const {\n    model,\n    category,\n    isTag\n  } = props;\n\n  const link = isTag ? 'tag' : 'category'\n\n  return(\n    <Field component={Link} model={model} to={`/${link}/${category.key}`} className=\"blog-entry category-card\">\n      {\n        category.image_s &&\n        <img className=\"background\" src={category.image_s} alt={category.value}/>\n      }\n      <h2 className=\"title\">{category.value}</h2>\n    </Field>\n  )\n}","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { useState, Suspense } from 'react';\nimport BaseLayout from '../shared/BaseLayout';\nimport RecentPostsAside from '../shared/RecentPostsAside';\nimport PostCard, { LANDSCAPE } from '../shared/PostCard';\nimport SidebarSearch from '../shared/SidebarSearch';\nimport { SidebarCategories, SidebarTags } from '../shared/SidebarTaxonomies';\nimport { usePosts, useTaxonomiesResource } from '../shared/hooks';\nimport CategoryCard from '../shared/CategoryCard';\nimport { parseDescriptor } from '@craftercms/content';\nimport { createTaxonomyFilter } from '../shared/utils';\nimport CircularProgressSpinner from '../shared/CircularProgressSpinner';\nimport { SidebarBiosWithICE } from '../shared/SidebarBios';\nimport { Field } from '@craftercms/studio-guest';\nimport Paginate from '../shared/Paginate';\n\nfunction CategoryContent({ resource, isTag, categoryId }) {\n  const { data } = resource.read();\n  const taxonomies = parseDescriptor(data.taxonomy.items);\n  const categories = taxonomies.filter(\n    createTaxonomyFilter(isTag ? 'tags.xml' : 'categories.xml')\n  )[0];\n\n  let category;\n  const [paginationData, setPaginationData] = useState({\n    itemsPerPage: 10,\n    currentPage: 0\n  });\n\n  if (categoryId) {\n    category = categories?.items.item.filter(category => category.key === categoryId)[0];\n  }\n\n  const posts = usePosts(paginationData, category);\n\n  return (\n    <>\n      {\n        categoryId\n          ?\n          <>\n            <div className=\"col-md-12\">\n              <h2 className=\"mb-4\">{isTag ? 'Tag' : 'Category'}: {category?.value}</h2>\n            </div>\n            <div className=\"col-md-12 col-lg-8 main-content\">\n              <div className=\"row mb-5 mt-5\">\n                <div className=\"col-md-12\">\n                  {\n                    posts?.items.map((post) =>\n                      <PostCard key={post.craftercms.id} model={post} format={LANDSCAPE} />\n                    )\n                  }\n                </div>\n              </div>\n              {\n                posts?.pageCount > 1 &&\n                <div className=\"row mt-5\">\n                  <div className=\"col-md-12 text-center\">\n                    <nav aria-label=\"Categories navigation\" className=\"text-center\">\n                      <Paginate\n                        pageCount={posts.pageCount}\n                        onPageChange={(index) => setPaginationData(\n                          {\n                            ...paginationData,\n                            currentPage: index * paginationData.itemsPerPage\n                          })\n                        }\n                      />\n                    </nav>\n                  </div>\n                </div>\n              }\n            </div>\n          </>\n          :\n          <>\n            <div className=\"col-md-12\">\n              <h2 className=\"mb-4\">{isTag ? 'Tags' : 'Categories'}:</h2>\n            </div>\n            <div className=\"col-md-12 col-lg-8\">\n              <Field\n                model={categories}\n                className='row'\n              >\n                {\n                  categories?.items.item.map(category =>\n                    <div className=\"col-md-6 mb-4\" key={category.key}>\n                      <CategoryCard model={categories} category={category} isTag={isTag} />\n                    </div>\n                  )\n                }\n              </Field>\n            </div>\n          </>\n      }\n    </>\n  );\n}\n\nexport default function (props) {\n  const {\n    match,\n    model,\n    meta: {\n      siteTitle,\n      socialLinks\n    }\n  } = props;\n\n  const isTag = match.path === '/tag/:id?';\n  const categoryId = match.params.id;\n  let resource = useTaxonomiesResource();\n\n  return (\n    <BaseLayout siteTitle={siteTitle} socialLinks={socialLinks}>\n      <section className=\"site-section pt-5\">\n        <div className=\"container\">\n          <div className=\"row blog-entries\">\n            <Suspense fallback={<CircularProgressSpinner screenHeight={false} />}>\n              <CategoryContent resource={resource} categoryId={categoryId} isTag={isTag} />\n            </Suspense>\n            <div className=\"col-md-12 col-lg-4 sidebar\">\n\n              <SidebarSearch />\n\n              <SidebarBiosWithICE model={model} fieldId=\"bios_o\" />\n\n              <RecentPostsAside />\n\n              <SidebarCategories />\n\n              <SidebarTags />\n\n            </div>\n          </div>\n        </div>\n      </section>\n    </BaseLayout>\n  );\n}\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport SearchForm from './SearchForm';\n\nconst translations = defineMessages({\n  searchFormPlaceholder: {\n    id: 'home.searchFormPlaceholder',\n    defaultMessage: 'Type a keyword and hit enter'\n  }\n});\n\nexport default function () {\n  const { formatMessage } = useIntl();\n  return (\n    <div className=\"sidebar-box search-form-wrap\">\n      <SearchForm\n        id=\"s\"\n        placeholder={formatMessage(translations.searchFormPlaceholder)}\n        classes={{\n          form: 'search-form',\n          input: 'form-control',\n          inputWrapper: 'form-group'\n        }}\n      />\n    </div>\n  );\n}\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport ReactPaginate from 'react-paginate';\n\nexport default function (props) {\n  const {\n    pageCount,\n    onPageChange\n  } = props;\n\n  return(\n    <ReactPaginate\n      containerClassName=\"pagination\"\n      pageClassName=\"page-item\"\n      pageLinkClassName=\"page-link\"\n      previousClassName=\"page-item\"\n      previousLinkClassName=\"page-link\"\n      nextClassName=\"page-item\"\n      nextLinkClassName=\"page-link\"\n      pageRangeDisplayed={3}\n      marginPagesDisplayed={3}\n      activeClassName=\"active\"\n      initialPage={0}\n      pageCount={pageCount}\n      onPageChange={({ selected: index }) => onPageChange(index) }\n      disableInitialCallback={true}\n      previousLabel={<span>&lt;</span>}\n      nextLabel={<span>&gt;</span>}\n    />\n  )\n}","import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    nextLabel: PropTypes.node,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousClassName: 'previous',\n    nextClassName: 'next',\n    previousLabel: 'Previous',\n    nextLabel: 'Next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.forcePage !== 'undefined' &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      this.setState({ selected: this.props.forcePage });\n    }\n  }\n\n  handlePreviousPage = evt => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = selectedItem => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        onClick={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = index => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              onClick={this.handleBreakClick.bind(null, index)}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      previousClassName,\n      nextClassName,\n      pageCount,\n      containerClassName,\n      previousLinkClassName,\n      previousLabel,\n      nextLinkClassName,\n      nextLabel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            onClick={this.handlePreviousPage}\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            onClick={this.handleNextPage}\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = props => {\n  let pageClassName = props.pageClassName;\n  let pageLinkClassName = props.pageLinkClassName;\n\n  const onClick = props.onClick;\n  const href = props.href;\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' +\n      props.page +\n      (props.extraAriaContext ? ' ' + props.extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (props.selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel =\n      props.ariaLabel || 'Page ' + props.page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + props.activeClassName;\n    } else {\n      pageClassName = props.activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof props.activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + props.activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = props.activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        onClick={onClick}\n        role=\"button\"\n        className={pageLinkClassName}\n        href={href}\n        tabIndex=\"0\"\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={onClick}\n      >\n        {props.page}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = props => {\n  const { breakLabel, breakClassName, breakLinkClassName, onClick } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        onClick={onClick}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={onClick}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n"],"sourceRoot":""}