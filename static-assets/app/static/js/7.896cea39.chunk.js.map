{"version":3,"sources":["pages/Search.js","shared/SidebarSearch.js","shared/Paginate.js","../../react_components/index.js","../../react_components/PaginationBoxView.js","../../react_components/PageView.js","../../react_components/BreakView.js"],"names":["SearchResults","resource","paginationData","onPageChange","read","hits","total","totalResults","value","pageCount","Math","ceil","itemsPerPage","map","post","key","craftercms","id","model","format","LANDSCAPE","className","index","props","meta","siteTitle","socialLinks","useState","currentPage","setPaginationData","useUrlSearchQueryFetchResource","history","useHistory","useSearchQuery","query","defaultMessage","fallback","screenHeight","page","push","pathname","search","fieldId","translations","defineMessages","searchFormPlaceholder","formatMessage","useIntl","placeholder","classes","form","input","inputWrapper","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","pageRangeDisplayed","marginPagesDisplayed","activeClassName","initialPage","selected","disableInitialCallback","previousLabel","nextLabel","PaginationBoxView","evt","selectedItem","items","breakLabel","breakClassName","breakLinkClassName","leftSide","rightSide","breakView","createPageView","onClick","initialSelected","this","extraAriaContext","console","prevProps","forcePage","forwardJump","backwardJump","pageIndex","hrefBuilder","state","ariaLabelBuilder","label","activeLinkClassName","handlePageSelected","bind","href","ariaLabel","disabledClassName","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","tabIndex","role","onKeyPress","aria-disabled","Component","propTypes","PropTypes","func","defaultProps","PageView","ariaCurrent","aria-label","aria-current","isRequired","BreakView"],"mappings":"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","file":"static/js/7.896cea39.chunk.js","sourcesContent":["/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { Suspense, useState } from 'react';\nimport BaseLayout from '../shared/BaseLayout';\nimport { FormattedMessage } from 'react-intl';\nimport SidebarSearch from '../shared/SidebarSearch';\nimport RecentPostsAside from '../shared/RecentPostsAside';\nimport { SidebarCategories, SidebarTags } from '../shared/SidebarTaxonomies';\nimport { useSearchQuery, useUrlSearchQueryFetchResource } from '../shared/hooks';\nimport CircularProgressSpinner from '../shared/CircularProgressSpinner';\nimport PostCard, { LANDSCAPE } from '../shared/PostCard';\nimport { useHistory } from 'react-router-dom'\nimport { SidebarBiosWithICE } from '../shared/SidebarBios';\nimport Paginate from '../shared/Paginate';\n\nfunction SearchResults({ resource, paginationData, onPageChange }) {\n  const { hits, total } = resource.read();\n\n  const totalResults = typeof total === 'object' ? total.value : total;\n  const pageCount = Math.ceil(totalResults/paginationData.itemsPerPage);\n  return (\n    <>\n      <p>{totalResults} result{totalResults === 0 || totalResults > 1 ? 's' : ''} found.</p>\n      {\n        hits.map((post) =>\n          <PostCard key={post.craftercms.id} model={post} format={LANDSCAPE} />\n        )\n      }\n\n      {\n        pageCount > 1 &&\n        <div className=\"col-md-12 text-center mt-5\">\n          <Paginate\n            pageCount={pageCount}\n            onPageChange={(index) => onPageChange(index * paginationData.itemsPerPage)}\n          />\n        </div>\n      }\n    </>\n  );\n}\n\nexport default function (props) {\n  const {\n    model,\n    meta: {\n      siteTitle,\n      socialLinks\n    }\n  } = props;\n  const [paginationData, setPaginationData] = useState({\n    itemsPerPage: 10,\n    currentPage: 0\n  });\n  let resource = useUrlSearchQueryFetchResource(paginationData.itemsPerPage);\n\n  const history = useHistory();\n  const [query] = useSearchQuery();\n\n  const onPageChange = (page) => {\n    setPaginationData({ ...paginationData, currentPage: page})\n    history.push({\n      pathname: '/search',\n      search: `?q=${query}&p=${page}`\n    });\n  }\n\n  return (\n    <BaseLayout siteTitle={siteTitle} socialLinks={socialLinks}>\n      <section className=\"site-section pt-5 py-sm\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h2 className=\"mb-4\">\n                <FormattedMessage\n                  id=\"common.latestPostSectionTitle\"\n                  defaultMessage=\"Search Results\"\n                />\n              </h2>\n            </div>\n          </div>\n          <div className=\"row blog-entries\">\n            <div className=\"col-md-12 col-lg-8 main-content\">\n              <div className=\"row\">\n                <Suspense fallback={<CircularProgressSpinner screenHeight={false} />}>\n                  <SearchResults\n                    resource={resource}\n                    paginationData={paginationData}\n                    onPageChange={onPageChange}\n                  />\n                </Suspense>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-lg-4 sidebar\">\n\n              <SidebarSearch />\n\n              <SidebarBiosWithICE model={model} fieldId=\"bios_o\" />\n\n              <RecentPostsAside />\n\n              <SidebarCategories />\n\n              <SidebarTags />\n\n            </div>\n          </div>\n        </div>\n      </section>\n    </BaseLayout>\n  );\n}\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport SearchForm from './SearchForm';\n\nconst translations = defineMessages({\n  searchFormPlaceholder: {\n    id: 'home.searchFormPlaceholder',\n    defaultMessage: 'Type a keyword and hit enter'\n  }\n});\n\nexport default function () {\n  const { formatMessage } = useIntl();\n  return (\n    <div className=\"sidebar-box search-form-wrap\">\n      <SearchForm\n        id=\"s\"\n        placeholder={formatMessage(translations.searchFormPlaceholder)}\n        classes={{\n          form: 'search-form',\n          input: 'form-control',\n          inputWrapper: 'form-group'\n        }}\n      />\n    </div>\n  );\n}\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport ReactPaginate from 'react-paginate';\n\nexport default function (props) {\n  const {\n    pageCount,\n    onPageChange\n  } = props;\n\n  return(\n    <ReactPaginate\n      containerClassName=\"pagination\"\n      pageClassName=\"page-item\"\n      pageLinkClassName=\"page-link\"\n      previousClassName=\"page-item\"\n      previousLinkClassName=\"page-link\"\n      nextClassName=\"page-item\"\n      nextLinkClassName=\"page-link\"\n      pageRangeDisplayed={3}\n      marginPagesDisplayed={3}\n      activeClassName=\"active\"\n      initialPage={0}\n      pageCount={pageCount}\n      onPageChange={({ selected: index }) => onPageChange(index) }\n      disableInitialCallback={true}\n      previousLabel={<span>&lt;</span>}\n      nextLabel={<span>&gt;</span>}\n    />\n  )\n}","import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    nextLabel: PropTypes.node,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousClassName: 'previous',\n    nextClassName: 'next',\n    previousLabel: 'Previous',\n    nextLabel: 'Next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.forcePage !== 'undefined' &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      this.setState({ selected: this.props.forcePage });\n    }\n  }\n\n  handlePreviousPage = evt => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = selectedItem => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        onClick={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = index => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              onClick={this.handleBreakClick.bind(null, index)}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      previousClassName,\n      nextClassName,\n      pageCount,\n      containerClassName,\n      previousLinkClassName,\n      previousLabel,\n      nextLinkClassName,\n      nextLabel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            onClick={this.handlePreviousPage}\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            onClick={this.handleNextPage}\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = props => {\n  let pageClassName = props.pageClassName;\n  let pageLinkClassName = props.pageLinkClassName;\n\n  const onClick = props.onClick;\n  const href = props.href;\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' +\n      props.page +\n      (props.extraAriaContext ? ' ' + props.extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (props.selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel =\n      props.ariaLabel || 'Page ' + props.page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + props.activeClassName;\n    } else {\n      pageClassName = props.activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof props.activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + props.activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = props.activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        onClick={onClick}\n        role=\"button\"\n        className={pageLinkClassName}\n        href={href}\n        tabIndex=\"0\"\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={onClick}\n      >\n        {props.page}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = props => {\n  const { breakLabel, breakClassName, breakLinkClassName, onClick } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        onClick={onClick}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={onClick}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n"],"sourceRoot":""}