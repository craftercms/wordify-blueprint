{"version":3,"sources":["shared/CategoryCard.js","pages/Category.js"],"names":["CategoryCard","props","model","category","link","isTag","component","Link","to","key","className","image_s","src","alt","value","CategoryContent","resource","categoryId","data","read","categories","parseDescriptor","taxonomy","items","filter","createTaxonomyFilter","useState","itemsPerPage","currentPage","paginationData","setPaginationData","item","posts","usePosts","map","post","PostCard","format","LANDSCAPE","craftercms","id","pageCount","aria-label","Paginate","onPageChange","index","Category","match","levelDescriptor","meta","path","setCategoryId","useTaxonomiesResource","useEffect","params","BaseLayout","fallback","CircularProgressSpinner","screenHeight","SidebarSearch","RecentPostsAside"],"mappings":"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","file":"static/js/14.91a13cc6.chunk.js","sourcesContent":["\n/*\n * Copyright (C) 2007-2022 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Field } from '@craftercms/experience-builder/react';\n\nfunction CategoryCard(props) {\n  const {\n    model,\n    category,\n    isTag\n  } = props;\n\n  const link = isTag ? 'tag' : 'category'\n\n  return(\n    <Field component={Link} model={model} to={`/${link}/${category.key}`} className=\"blog-entry category-card\">\n      {\n        category.image_s &&\n        <img className=\"background\" src={category.image_s} alt={category.value}/>\n      }\n      <h2 className=\"title\">{category.value}</h2>\n    </Field>\n  )\n}\n\nexport default CategoryCard;","/*\n * Copyright (C) 2007-2022 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { useState, Suspense, useEffect } from 'react';\nimport BaseLayout from '../shared/BaseLayout';\nimport RecentPostsAside from '../shared/RecentPostsAside';\nimport PostCard, { LANDSCAPE } from '../shared/PostCard';\nimport SidebarSearch from '../shared/SidebarSearch';\nimport { SidebarCategories, SidebarTags } from '../shared/SidebarTaxonomies';\nimport { usePosts, useTaxonomiesResource } from '../shared/hooks';\nimport CategoryCard from '../shared/CategoryCard';\nimport { parseDescriptor } from '@craftercms/content';\nimport { createTaxonomyFilter } from '../shared/utils';\nimport CircularProgressSpinner from '../shared/CircularProgressSpinner';\nimport { Field } from '@craftercms/experience-builder/react';\nimport Paginate from '../shared/Paginate';\n\nfunction CategoryContent({ resource, isTag, categoryId }) {\n  const { data } = resource.read();\n  const taxonomies = parseDescriptor(data.taxonomy.items);\n  const categories = taxonomies.filter(\n    createTaxonomyFilter(isTag ? 'tags.xml' : 'categories.xml')\n  )[0];\n\n  let category;\n  const [paginationData, setPaginationData] = useState({\n    itemsPerPage: 8,\n    currentPage: 0\n  });\n\n  if (categoryId) {\n    category = categories?.items.item.filter(category => category.key === categoryId)[0];\n  }\n\n  const posts = usePosts(paginationData, category);\n\n  return (\n    <>\n      {\n        categoryId\n          ?\n          <>\n            <div className=\"col-md-12\">\n              <h2 className=\"mb-4\">{isTag ? 'Tag' : 'Category'}: {category?.value}</h2>\n            </div>\n            <div className=\"col-md-12 col-lg-8 main-content\">\n              <div className=\"row mb-5 mt-5\">\n                <div className=\"col-md-12\">\n                  {\n                    posts?.items.map((post) =>\n                      <PostCard key={post.craftercms.id} model={post} format={LANDSCAPE} />\n                    )\n                  }\n                </div>\n              </div>\n              {\n                posts?.pageCount > 1 &&\n                <div className=\"row mt-5\">\n                  <div className=\"col-md-12 text-center\">\n                    <nav aria-label=\"Categories navigation\" className=\"text-center\">\n                      <Paginate\n                        pageCount={posts.pageCount}\n                        onPageChange={(index) => setPaginationData(\n                          {\n                            ...paginationData,\n                            currentPage: index * paginationData.itemsPerPage\n                          })\n                        }\n                      />\n                    </nav>\n                  </div>\n                </div>\n              }\n            </div>\n          </>\n          :\n          <>\n            <div className=\"col-md-12\">\n              <h2 className=\"mb-4\">{isTag ? 'Tags' : 'Categories'}:</h2>\n            </div>\n            <div className=\"col-md-12 col-lg-8\">\n              <Field\n                model={categories}\n                className='row'\n              >\n                {\n                  categories?.items.item.map(category =>\n                    <div className=\"col-md-6 mb-4\" key={category.key}>\n                      <CategoryCard model={categories} category={category} isTag={isTag} />\n                    </div>\n                  )\n                }\n              </Field>\n            </div>\n          </>\n      }\n    </>\n  );\n}\n\nfunction Category(props) {\n  const {\n    match,\n    meta: {\n      levelDescriptor\n    }\n  } = props;\n\n  const isTag = match.path === '/tag/:id?';\n  const [categoryId, setCategoryId] = useState();\n  let resource = useTaxonomiesResource();\n\n\n  useEffect(() => {\n    setCategoryId(match.params.id);\n  }, [match.params, match.path]);\n\n  return (\n    <BaseLayout model={levelDescriptor}>\n      <section className=\"site-section pt-5\">\n        <div className=\"container\">\n          <div className=\"row blog-entries\">\n            <Suspense fallback={<CircularProgressSpinner screenHeight={false} />}>\n              <CategoryContent resource={resource} categoryId={categoryId} isTag={isTag} />\n            </Suspense>\n            <div className=\"col-md-12 col-lg-4 sidebar\">\n\n              <SidebarSearch />\n\n              <RecentPostsAside />\n\n              <SidebarCategories />\n\n              <SidebarTags />\n\n            </div>\n          </div>\n        </div>\n      </section>\n    </BaseLayout>\n  );\n}\n\nexport default Category;"],"sourceRoot":""}