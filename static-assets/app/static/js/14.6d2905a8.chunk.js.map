{"version":3,"sources":["pages/Search.js"],"names":["SearchResults","resource","paginationData","onPageChange","read","hits","total","totalResults","value","pageCount","Math","ceil","itemsPerPage","map","post","key","craftercms","id","model","format","LANDSCAPE","className","index","props","meta","siteTitle","socialLinks","useState","currentPage","setPaginationData","useUrlSearchQueryFetchResource","history","useHistory","useSearchQuery","query","defaultMessage","fallback","screenHeight","page","push","pathname","search"],"mappings":"qRA4BA,SAASA,EAAT,GAAoE,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,eAAgBC,EAAgB,EAAhBA,aAAgB,EACzCF,EAASG,OAAzBC,EADyD,EACzDA,KAAMC,EADmD,EACnDA,MAERC,EAAgC,kBAAVD,EAAqBA,EAAME,MAAQF,EACzDG,EAAYC,KAAKC,KAAKJ,EAAaL,EAAeU,cACxD,OACE,oCACE,2BAAIL,EAAJ,UAA0C,IAAjBA,GAAsBA,EAAe,EAAI,IAAM,GAAxE,WAEEF,EAAKQ,KAAI,SAACC,GAAD,OACP,kBAAC,IAAD,CAAUC,IAAKD,EAAKE,WAAWC,GAAIC,MAAOJ,EAAMK,OAAQC,SAK1DX,EAAY,GACZ,yBAAKY,UAAU,8BACb,kBAAC,IAAD,CACEZ,UAAWA,EACXN,aAAc,SAACmB,GAAD,OAAWnB,EAAamB,EAAQpB,EAAeU,mBAQ1D,mBAAUW,GAAQ,IAAD,EAM1BA,EAJFC,KACEC,EAH0B,EAG1BA,UACAC,EAJ0B,EAI1BA,YAJ0B,EAOcC,mBAAS,CACnDf,aAAc,GACdgB,YAAa,IATe,mBAOvB1B,EAPuB,KAOP2B,EAPO,KAW1B5B,EAAW6B,YAA+B5B,EAAeU,cAEvDmB,EAAUC,cAbc,EAcdC,cAATC,EAduB,oBAwB9B,OACE,kBAAC,IAAD,CAAYT,UAAWA,EAAWC,YAAaA,GAC7C,6BAASL,UAAU,2BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,QACZ,kBAAC,IAAD,CACEJ,GAAG,gCACHkB,eAAe,sBAKvB,yBAAKd,UAAU,oBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,OACb,kBAAC,WAAD,CAAUe,SAAU,kBAAC,IAAD,CAAyBC,cAAc,KACzD,kBAACrC,EAAD,CACEC,SAAUA,EACVC,eAAgBA,EAChBC,aA7BG,SAACmC,GACpBT,EAAkB,eAAK3B,EAAN,CAAsB0B,YAAaU,KACpDP,EAAQQ,KAAK,CACXC,SAAU,UACVC,OAAO,MAAD,OAAQP,EAAR,cAAmBI,WA8BnB,yBAAKjB,UAAU,8BAEb,kBAAC,IAAD,MAMA,kBAAC,IAAD,MAEA,kBAAC,IAAD,MAEA,kBAAC,IAAD","file":"static/js/14.6d2905a8.chunk.js","sourcesContent":["/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { Suspense, useState } from 'react';\nimport BaseLayout from '../shared/BaseLayout';\nimport { FormattedMessage } from 'react-intl';\nimport SidebarSearch from '../shared/SidebarSearch';\nimport RecentPostsAside from '../shared/RecentPostsAside';\nimport { SidebarCategories, SidebarTags } from '../shared/SidebarTaxonomies';\nimport { useSearchQuery, useUrlSearchQueryFetchResource } from '../shared/hooks';\nimport CircularProgressSpinner from '../shared/CircularProgressSpinner';\nimport PostCard, { LANDSCAPE } from '../shared/PostCard';\nimport { useHistory } from 'react-router-dom';\nimport Paginate from '../shared/Paginate';\n\nfunction SearchResults({ resource, paginationData, onPageChange }) {\n  const { hits, total } = resource.read();\n\n  const totalResults = typeof total === 'object' ? total.value : total;\n  const pageCount = Math.ceil(totalResults/paginationData.itemsPerPage);\n  return (\n    <>\n      <p>{totalResults} result{totalResults === 0 || totalResults > 1 ? 's' : ''} found.</p>\n      {\n        hits.map((post) =>\n          <PostCard key={post.craftercms.id} model={post} format={LANDSCAPE} />\n        )\n      }\n\n      {\n        pageCount > 1 &&\n        <div className=\"col-md-12 text-center mt-5\">\n          <Paginate\n            pageCount={pageCount}\n            onPageChange={(index) => onPageChange(index * paginationData.itemsPerPage)}\n          />\n        </div>\n      }\n    </>\n  );\n}\n\nexport default function (props) {\n  const {\n    meta: {\n      siteTitle,\n      socialLinks\n    }\n  } = props;\n  const [paginationData, setPaginationData] = useState({\n    itemsPerPage: 10,\n    currentPage: 0\n  });\n  let resource = useUrlSearchQueryFetchResource(paginationData.itemsPerPage);\n\n  const history = useHistory();\n  const [query] = useSearchQuery();\n\n  const onPageChange = (page) => {\n    setPaginationData({ ...paginationData, currentPage: page})\n    history.push({\n      pathname: '/search',\n      search: `?q=${query}&p=${page}`\n    });\n  }\n\n  return (\n    <BaseLayout siteTitle={siteTitle} socialLinks={socialLinks}>\n      <section className=\"site-section pt-5 py-sm\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h2 className=\"mb-4\">\n                <FormattedMessage\n                  id=\"common.latestPostSectionTitle\"\n                  defaultMessage=\"Search Results\"\n                />\n              </h2>\n            </div>\n          </div>\n          <div className=\"row blog-entries\">\n            <div className=\"col-md-12 col-lg-8 main-content\">\n              <div className=\"row\">\n                <Suspense fallback={<CircularProgressSpinner screenHeight={false} />}>\n                  <SearchResults\n                    resource={resource}\n                    paginationData={paginationData}\n                    onPageChange={onPageChange}\n                  />\n                </Suspense>\n              </div>\n            </div>\n            <div className=\"col-md-12 col-lg-4 sidebar\">\n\n              <SidebarSearch />\n\n              {/*\n              <SidebarBios bios={bios_o} />\n              */}\n\n              <RecentPostsAside />\n\n              <SidebarCategories />\n\n              <SidebarTags />\n\n            </div>\n          </div>\n        </div>\n      </section>\n    </BaseLayout>\n  );\n}\n"],"sourceRoot":""}