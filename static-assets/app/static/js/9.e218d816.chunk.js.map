{"version":3,"sources":["shared/PostCard.js","../node_modules/react-intl/lib/components/useIntl.js","../../../../../packages/content/src/ContentStoreService.ts","../../../../../packages/content/src/UrlTransformationService.ts","../../../../../packages/content/src/utils.ts","components/Slider.js"],"names":["LANDSCAPE","LANDSCAPE_COMPRESSED","IMAGE_BACKGROUND","props","formatDate","useIntl","useGlobalContext","isAuthoring","classes","parentModelId","format","showBlurb","tags","numOfComments","model","authorBio_o","authorName","name_s","authorAvatarUrl","profilePic_s","blurb_t","headline_s","mainImage_s","mainImageAlt_s","dateModified","craftercms","slug","path","replace","ice","useICE","to","className","root","src","alt","style","backgroundImage","innerWrapper","console","error","intl","useContext","Context","invariantIntlContext","getItem","config","mix","requestURL","endpoints","GET_ITEM_URL","httpGet","url","crafterSite","site","systemPropMap","guid","cmsId","objectId","localId","placeInNav","internal__name","content__type","createdDate_dt","lastModifiedDate_dt","disabled","ignoreProps","systemProps","Object","keys","concat","values","parseDescriptor","data","Array","isArray","map","item","children","extractChildren","flatMap","child","descriptorDom","descriptorUrl","Error","parseProps","parsed","entries","forEach","prop","value","includes","endsWith","key","component","label","startsWith","output","page","extractContent","id","contentTypeId","dateCreated","posts_o","$","usePencil","useState","posts","setPosts","paths","reduce","accum","index","useEffect","invalid","Promise","all","split","crafterConfig","toPromise","then","loadedPosts","bio","loadedBios","p","b","find","lb","$carousel","owlCarousel","loop","autoplay","margin","animateOut","animateIn","nav","autoplayHoverPause","items","navText","responsive","0","600","1000","PostCard"],"mappings":"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","file":"static/js/9.e218d816.chunk.js","sourcesContent":["/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { useICE } from '@craftercms/ice/esm2015/react';\nimport { useGlobalContext } from './context';\n\nexport const\n  PORTRAIT = 'portrait',\n  LANDSCAPE = 'landscape',\n  LANDSCAPE_COMPRESSED = 'landscapeCompressed',\n  IMAGE_BACKGROUND = 'imageBackground';\n\nexport default function (props) {\n  const { formatDate } = useIntl();\n  const [{ isAuthoring }] = useGlobalContext();\n  const {\n    classes,\n    parentModelId,\n    format = PORTRAIT,\n    showBlurb = false,\n    tags = '',\n    numOfComments,\n    model,\n    model: {\n      // pageTitle_s,\n      // pageDescription_s,\n      // authorBio_o,\n      authorBio_o: [{\n        name_s: authorName,\n        profilePic_s: authorAvatarUrl\n      }],\n      blurb_t,\n      // content_o,\n      headline_s,\n      mainImage_s,\n      mainImageAlt_s = '',\n      craftercms: {\n        dateModified\n      },\n    }\n  } = props;\n  const slug = model.craftercms.path\n    .replace(/(\\/site\\/components)|(index\\.xml)/g, '')\n    .replace(/(\\/\\/)/g, '/')\n    .replace('post/', 'articles/');\n  const { props: ice } = useICE({ model, parentModelId, isAuthoring });\n  switch (format) {\n    case PORTRAIT:\n      return (\n        <Link to={slug} className={`blog-entry ${classes?.root ?? ''}`} {...ice}>\n          <img src={mainImage_s} alt={mainImageAlt_s} />\n          <div className=\"blog-content-body\">\n            <div className=\"post-meta\">\n              <span className=\"author mr-2\">\n                <img src={authorAvatarUrl} alt=\"\" /> {authorName}\n              </span>\n              {' • '}<span className=\"mr-2\">{formatDate(dateModified)}</span>\n              {\n                numOfComments &&\n                <>\n                  {' • '}<span className=\"ml-2\"><span className=\"fa fa-comments\" /> {numOfComments}</span>\n                </>\n              }\n            </div>\n            <h2>{headline_s}</h2>\n          </div>\n        </Link>\n      );\n    case LANDSCAPE:\n      return (\n        <div className=\"post-entry-horizontal\" {...ice}>\n          <Link to={slug} className={classes?.root}>\n            <div className=\"image\" style={{ backgroundImage: `url(${mainImage_s})` }} />\n            <span className=\"text\">\n              <div className=\"post-meta\">\n                <span className=\"author mr-2\">\n                  <img src={authorAvatarUrl} alt=\"\" /> {authorName}\n                </span>\n                • <span className=\"mr-2\">{formatDate(dateModified)}</span>\n                {\n                  numOfComments &&\n                  <>\n                    • <span className=\"ml-2\"><span className=\"fa fa-comments\" /> ${numOfComments}</span>\n                  </>\n                }\n              </div>\n              <h2>{headline_s}</h2>\n            </span>\n          </Link>\n        </div>\n      );\n    case LANDSCAPE_COMPRESSED:\n      return (\n        <Link to={slug} className={classes?.root} {...ice}>\n          <img src={mainImage_s} alt={mainImageAlt_s} className=\"mr-4\" />\n          <div className=\"text\">\n            <h4>{headline_s}</h4>\n            <div className=\"post-meta\">\n              <span className=\"mr-2\">{formatDate(dateModified)}</span>\n            </div>\n          </div>\n        </Link>\n      );\n    case IMAGE_BACKGROUND:\n      return (\n        <Link\n          to={slug}\n          className={`a-block d-flex align-items-center ${classes?.root ?? ''}`}\n          style={{ backgroundImage: `url(${mainImage_s})` }}\n        >\n          <div className={`text ${classes?.innerWrapper}`} {...ice}>\n            <div className=\"post-meta\">\n              {\n                tags &&\n                <>\n                  <span className=\"category\">{tags}</span>\n                  {' • '}\n                </>\n              }\n              <span className=\"mr-2\">{formatDate(dateModified)}</span>\n              {\n                numOfComments &&\n                <>\n                  {' • '}<span className=\"ml-2\"><span className=\"fa fa-comments\"/> {numOfComments}</span>\n                </>\n              }\n            </div>\n            <h3>{headline_s}</h3>\n            {\n              showBlurb && <p>{blurb_t}</p>\n            }\n          </div>\n        </Link>\n      );\n    default:\n      console.error(`Unknown PostCard format \"${format}\" on post \"${headline_s}\"`);\n      return (\n        <Link to={slug} className={classes?.root} {...ice}>\n          <h2>{headline_s}</h2>\n        </Link>\n      );\n  }\n}\n","import { useContext } from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    const intl = useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Observable } from 'rxjs';\n\nimport { crafterConf, SDKService } from '@craftercms/classes';\nimport { CrafterConfig, Descriptor, Item } from '@craftercms/models';\nimport { composeUrl } from '@craftercms/utils';\n\n/**\n * Returns an Item from the content store.\n * @param {string} path - The item’s path\n */\nexport function getItem(path: string): Observable<Item>;\nexport function getItem(path: string, config: CrafterConfig): Observable<Item>;\nexport function getItem(path: string, config?: CrafterConfig): Observable<Item> {\n  config = crafterConf.mix(config);\n  const requestURL = composeUrl(config, config.endpoints.GET_ITEM_URL);\n  return SDKService.httpGet(requestURL, { url: path, crafterSite: config.site });\n}\n\n/**\n * Returns the descriptor data of an Item in the content store.\n * @param {string} path - The item’s path\n */\nexport function getDescriptor(path: string): Observable<Descriptor>;\nexport function getDescriptor(path: string, config: CrafterConfig): Observable<Descriptor>;\nexport function getDescriptor(path: string, config?: CrafterConfig): Observable<Descriptor> {\n  config = crafterConf.mix(config);\n  const requestURL = composeUrl(config, config.endpoints.GET_DESCRIPTOR);\n  return SDKService.httpGet(requestURL, { url: path, crafterSite: config.site });\n}\n\n/**\n * Returns the list of Items directly under a folder in the content store.\n * @param {string} path - the folder’s path\n */\nexport function getChildren(path: string): Observable<Item[]>;\nexport function getChildren(path: string, config: CrafterConfig): Observable<Item[]>;\nexport function getChildren(path: string, config?: CrafterConfig): Observable<Item[]> {\n  config = crafterConf.mix(config);\n  const requestURL = composeUrl(config, config.endpoints.GET_CHILDREN);\n  return SDKService.httpGet(requestURL, { url: path, crafterSite: config.site });\n}\n\n/**\n * Returns the complete Item hierarchy under the specified folder in the content store.\n * @param {string} path - the folder’s path\n * @param {int} depth - Amount of levels to include\n */\nexport function getTree(path: string): Observable<Item>;\nexport function getTree(path: string, depth: number): Observable<Item>;\nexport function getTree(path: string, depth: number, config: CrafterConfig): Observable<Item>;\nexport function getTree(path: string, config: CrafterConfig): Observable<Item>;\nexport function getTree(path: string, depth: number | CrafterConfig = 1, config?: CrafterConfig): Observable<Item> {\n  if (typeof depth === 'object') {\n    config = depth;\n    depth = 1;\n  }\n  config = crafterConf.mix(config);\n  const requestURL = composeUrl(config, config.endpoints.GET_TREE);\n  return SDKService.httpGet(requestURL, { url: path, depth, crafterSite: config.site });\n}\n\nexport const ContentStoreService = {\n  getItem,\n  getDescriptor,\n  getChildren,\n  getTree\n};\n\nexport default ContentStoreService;\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Observable } from 'rxjs';\n\nimport { crafterConf, SDKService } from '@craftercms/classes';\nimport { CrafterConfig } from '@craftercms/models';\nimport { composeUrl } from '@craftercms/utils';\n\n/**\n * Transforms a URL, based on the current site's UrlTransformationEngine.\n * @param {string} transformerName - Name of the transformer to apply\n * @param {string} url - URL that will be transformed\n */\nexport function urlTransform(transformerName: string, url: string): Observable<any>;\nexport function urlTransform(transformerName: string, url: string, config: CrafterConfig): Observable<any>;\nexport function urlTransform(transformerName: string, url: string, config?: CrafterConfig): Observable<any> {\n  config = crafterConf.mix(config);\n  const requestURL = composeUrl(config, config.endpoints.TRANSFORM_URL);\n  return SDKService.httpGet(requestURL, {\n    crafterSite: config.site,\n    transformerName,\n    url\n  });\n}\n\n/**\n * URL Transformation Service API\n */\nexport const UrlTransformationService = {\n  transform: urlTransform,\n  urlTransform\n};\n\nexport default UrlTransformationService;\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { ContentInstance, Descriptor, Item } from '@craftercms/models';\n\ninterface GraphQLResponse {\n  [root: string]: {\n    // Repeating groups & node selectors collection root\n    item?:\n      object[] |\n      Array<{\n        key: string;\n        value: string;\n        component: unknown;\n      }>\n    // Other field types\n    [contentTypeField: string]: unknown\n  }\n}\n\ntype DescriptorResponse = Descriptor | Item | GraphQLResponse;\n\nconst systemPropMap = {\n  guid: 'id',\n  cmsId: 'id',\n  objectId: 'id',\n  localId: 'path',\n  'file-name': 'fileName',\n  'file__name': 'fileName',\n  placeInNav: 'placeInNav',\n  'internal-name': 'label',\n  internal__name: 'label',\n  'content-type': 'contentTypeId',\n  content__type: 'contentTypeId',\n  createdDate_dt: 'dateCreated',\n  lastModifiedDate_dt: 'dateModified',\n  disabled: 'disabled'\n};\n\nconst ignoreProps = [\n  'orderDefault_f',\n  'merge-strategy',\n  'display-template',\n  'objectGroupId',\n  'folder-name',\n  'createdDate',\n  'lastModifiedDate',\n  'no-template-required'\n];\n\nconst systemProps = Object.keys(systemPropMap).concat(\n  Object.values(systemPropMap)\n);\n\nexport function parseDescriptor(data: DescriptorResponse | DescriptorResponse[]): ContentInstance | ContentInstance[] {\n  if (data == null) {\n    return null;\n  } else if (Array.isArray(data)) {\n    return data.map((item) => parseDescriptor(item) as ContentInstance);\n  } else if (data.children) {\n    return parseDescriptor(extractChildren(data.children));\n  } else if (data.descriptorDom === null && data.descriptorUrl) {\n    // This path catches calls to getChildren (/api/1/site/content_store/children.json?url=&crafterSite=)\n    // The getChildren call contains certain items that can't be parsed into content items.\n    throw new Error(\n      '[parseDescriptor] Invalid descriptor supplied. Did you call ' +\n      'parseDescriptor with a `getChildren` API response? The `getChildren` API ' +\n      'response may contain certain items that are not parsable into ContentInstances. ' +\n      'Try a different API (getItem, getDescriptor or getTree) or filter out the metadata ' +\n      'items which descriptorDom property has a `page` or `component` property with the content item.'\n    );\n  }\n  let parsed: ContentInstance = {\n    craftercms: {\n      id: null,\n      path: null,\n      label: null,\n      contentTypeId: null,\n      dateCreated: null,\n      dateModified: null\n    }\n  };\n  return parseProps(extractContent(data), parsed);\n}\n\nexport function parseProps<Props = object, Target = object>(props: Props, parsed: Target = {} as Target): Target {\n  Object.entries(props).forEach(([prop, value]) => {\n    if (ignoreProps.includes(prop)) {\n      return; // continue, skip prop.\n    }\n    if (systemProps.includes(prop)) {\n      // @ts-ignore\n      parsed.craftercms[systemPropMap[prop] ?? prop] = value;\n      // Is there a risk prop name that matches what's considered a system prop?\n      // In that case, here, parsed.craftercms might not be in the target object\n      // and throw. We could do the below to de-risk but feels this needs assessment.\n      // if (parsed.craftercms) {\n      //   parsed.craftercms[systemPropMap[prop] ?? prop] = value;\n      // } else {\n      //   parsed[prop] = value;\n      // }\n    } else if (prop.endsWith('_o')) {\n      parsed[prop] = value?.item ?? [];\n      parsed[prop] = parsed[prop].map((item) => {\n        const { key, value, component } = item;\n        if ((item.component) || (item.key && item.value)) {\n          // Components\n          const newComponent = {\n            label: value,\n            ...component,\n            path: key.startsWith('/') ? key : null\n          };\n          return parseDescriptor(newComponent);\n        } else {\n          // Repeat group items\n          return parseProps(item);\n        }\n      });\n    } else {\n      parsed[prop] = value ?? null;\n    }\n  });\n  return parsed;\n}\n\n/**\n * Inspects the data for getItem or getDescriptor responses and returns the inner content object\n * */\nfunction extractContent(data) {\n  let output = data;\n  if (data.descriptorDom) {\n    return {\n      ...(data.descriptorDom.page || data.descriptorDom.component),\n      path: data.url\n    };\n  } else if (data.page) {\n    return data.page;\n  } else if (data.component) {\n    return data.component;\n  }\n  return output;\n}\n\n/**\n * Flattens a getChildren response into a flat list of content items\n * */\nfunction extractChildren(children) {\n  return children.flatMap((child) => {\n    return child.children ? extractChildren(child.children) : child;\n  });\n}\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PostCard, { IMAGE_BACKGROUND } from '../shared/PostCard';\nimport { getItem, parseDescriptor } from '@craftercms/content/esm2015';\nimport { usePencil } from '../shared/hooks';\nimport { useGlobalContext } from '../shared/context';\nimport { crafterConfig } from '../shared/utils';\n\nconst D = '{-}'; // divider\n\nexport default function (props) {\n\n  const {\n    model: {\n      craftercms: {\n        id\n      },\n      posts_o\n    }\n  } = props;\n\n  const [{ $ }] = useGlobalContext();\n  const ice = usePencil(props);\n\n  // region \"Sample\"\n\n  const [posts, setPosts] = useState(null);\n  const paths = posts_o?.reduce(\n    (accum, { craftercms: { path } }, index) => `${accum}${index ? D : ''}${path}`,\n    ''\n  );\n\n  useEffect(() => {\n    let invalid = false;\n    paths && Promise.all(\n      paths.split(D).map((path) => getItem(path, crafterConfig).toPromise())\n    ).then(parseDescriptor).then((loadedPosts) => {\n      (!invalid) && Promise.all(\n        loadedPosts.flatMap(\n          ({ authorBio_o }) => authorBio_o.map(bio => bio.craftercms.path)\n        ).map(path => getItem(path, crafterConfig).toPromise())\n      ).then(parseDescriptor).then((loadedBios) => {\n        (!invalid) && setPosts(\n          loadedPosts.map((p) => ({\n            ...p,\n            authorBio_o: p.authorBio_o.map(\n              b => loadedBios.find(lb => b.craftercms.path === lb.craftercms.path)\n            )\n          }))\n        );\n      });\n    });\n    return () => {\n      invalid = true;\n    };\n  }, [id, paths]);\n\n  // endregion\n\n  useEffect(() => {\n    if (posts) {\n      const $carousel = $('.home-slider');\n      $carousel.owlCarousel({\n        loop: true,\n        autoplay: true,\n        margin: 10,\n        animateOut: 'fadeOut',\n        animateIn: 'fadeIn',\n        nav: true,\n        autoplayHoverPause: true,\n        items: 1,\n        navText: ['<span class=\"ion-chevron-left\"></span>', '<span class=\"ion-chevron-right\"></span>'],\n        responsive: {\n          0: {\n            items: 1,\n            nav: false\n          },\n          600: {\n            items: 1,\n            nav: false\n          },\n          1000: {\n            items: 1,\n            nav: true\n          }\n        }\n      });\n      return () => {\n        $carousel.owlCarousel('destroy');\n      };\n    }\n  }, [posts, $]);\n\n  return (\n    <div className=\"owl-carousel owl-theme home-slider\" {...ice}>\n      {\n        posts?.map(model =>\n          <div key={model.craftercms.id}>\n            <PostCard\n              tags=\"Food\"\n              model={model}\n              showBlurb\n              format={IMAGE_BACKGROUND}\n              classes={{ root: 'height-lg', innerWrapper: 'half-to-full' }}\n            />\n          </div>\n        )\n      }\n    </div>\n  );\n}\n"],"sourceRoot":""}