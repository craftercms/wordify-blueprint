{"version":3,"file":"static/js/350.82deec05.chunk.js","mappings":"+MAwEA,UAnDA,SAAgBA,GAAQ,IAADC,EAGnBC,EACEF,EADFE,MAGEC,GAAUC,EAAAA,EAAAA,MACqB,IAA/BJ,EAAME,MAAMC,QAAQE,SACtBF,EAAUH,EAAME,MAAMC,SAGxB,IAAAG,GAAwCC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAYT,EAAQO,GAE1B,OACEG,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAACZ,MAAOA,EAAOa,UAAU,gDAA+CC,UAC5EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BH,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAACZ,MAAOA,EAAOgB,QAAQ,UAAUH,UAAU,YAAWC,UAC1DH,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAEJC,UAAU,kBACVb,MAAOA,EACPgB,QAAQ,UACRC,MAAOT,EACPU,MAAO,CAAEC,MAAO,QAASL,UAEzBH,EAAAA,EAAAA,KAACS,EAAAA,GAAQ,CACPC,KAAK,OACLrB,MAAOU,EACPY,WAAS,EACTC,OAAQC,EAAAA,GACRC,QAAS,CAAEC,KAAM,YAAaC,aAAc,mBAZzCjB,EAAUkB,WAAWC,OAgB9BlB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUC,SAEd,QAFcf,EAErBE,SAAO,IAAAF,OAAA,EAAPA,EAAS+B,KAAI,SAACpB,EAAWO,GAAK,OAC5BN,EAAAA,EAAAA,KAAA,UAEEE,UAAS,WAAAkB,OAAad,IAAUT,EAAe,SAAW,IAC1DwB,QAAS,kBAAMvB,EAAgBQ,EAAM,EAACH,UACvCH,EAAAA,EAAAA,KAAA,YAHMM,EAGW,UAOhC,C,2JChDEgB,EAAW,WACXC,EAAY,YACZC,EAAuB,sBACvBX,EAAmB,kBAoLrB,KAlLA,SAAkB1B,GAAQ,IAADsC,EAAAC,EACfC,GAAeC,EAAAA,EAAAA,KAAfD,WAENb,EAcE3B,EAdF2B,QAAOe,EAcL1C,EAbFyB,OAAAA,OAAM,IAAAiB,EAAGP,EAAQO,EAAAC,EAaf3C,EAZFwB,UAAAA,OAAS,IAAAmB,GAAQA,EACjBC,EAWE5C,EAXF4C,cACA1C,EAUEF,EAVFE,MAAK2C,EAUH7C,EATFE,MACE4C,EAAWD,EAAXC,YACAC,EAAUF,EAAVE,WAAUC,EAAAH,EACVI,eAAAA,OAAc,IAAAD,EAAG,GAAEA,EACnBE,EAAYL,EAAZK,aAEEC,EAAYN,EADdf,WACEqB,aAIAC,EAAyB,OAAXN,QAAW,IAAXA,OAAW,EAAXA,EAAc,GAC5BO,GACJpC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBH,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CACJF,UAAU,OACVV,MAAOA,EACPgB,QAAQ,cACRC,MAAO,EACPJ,UAAU,cAAaC,UAEvBC,EAAAA,EAAAA,MAACH,EAAAA,GAAK,CAACF,UAAU,OAAOV,MAAOkD,EAAYpC,SAAA,EACzCH,EAAAA,EAAAA,KAACyC,EAAAA,GAAW,CACV1C,UAAU,MACVV,MAAOkD,EACPG,aAAa,MACbrC,QAAQ,eACRsC,IAAI,KACH,KACH3C,EAAAA,EAAAA,KAACyC,EAAAA,GAAW,CACV1C,UAAU,OACVV,MAAOkD,EACPlC,QAAQ,gBAIb,YAAML,EAAAA,EAAAA,KAAA,QAAME,UAAU,OAAMC,SAAEwB,EAAWW,KAExCP,IACA3B,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAAzC,SAAA,CACG,YAAMC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,OAAMC,SAAA,EAACH,EAAAA,EAAAA,KAAA,QAAME,UAAU,mBAAmB,IAAE6B,WAKrEc,EAAmBxD,EAAM4B,WAAW6B,KAwHvCC,QAAQ,qCAAsC,IAC9CA,QAAQ,kCAAmC,IAC3CA,QAAQ,UAAW,KACnBA,QAAQ,OAAQ,IA1HnB,OAAQnC,GACN,KAAKU,EACH,OACElB,EAAAA,EAAAA,MAACH,EAAAA,GAAK,CACJF,UAAWiD,EAAAA,GACX3D,MAAOA,EACP4D,GAAIJ,EACJ3C,UAAS,cAAAkB,OAA6B,QAA7BK,EAAuB,OAAPX,QAAO,IAAPA,OAAO,EAAPA,EAASC,YAAI,IAAAU,EAAAA,EAAI,IAAKtB,SAAA,EAE/CH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAeC,UAC5BH,EAAAA,EAAAA,KAACyC,EAAAA,GAAW,CACV1C,UAAU,MACVV,MAAOA,EACPqD,aAAa,MACbrC,QAAQ,cACRsC,IAAKP,OAGThC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,CAC/BqC,GACDxC,EAAAA,EAAAA,KAACyC,EAAAA,GAAW,CAAC1C,UAAU,KAAKV,MAAOA,EAAOgB,QAAQ,qBAI1D,KAAKkB,EACH,OACEvB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wBAAuBC,UAGpCC,EAAAA,EAAAA,MAACH,EAAAA,GAAK,CAACF,UAAWiD,EAAAA,GAAM3D,MAAOA,EAAO4D,GAAIJ,EAAM3C,UAAkB,OAAPY,QAAO,IAAPA,OAAO,EAAPA,EAASC,KAAKZ,SAAA,EACvEH,EAAAA,EAAAA,KAACyC,EAAAA,GAAW,CACVpD,MAAOA,EACPgB,QAAQ,cACRqC,aAAa,wBACb9B,OAAQ,SAACsC,GAAG,cAAA9B,OAAa8B,EAAG,OAC5BhD,UAAU,WAEZE,EAAAA,EAAAA,MAAA,QAAMF,UAAU,OAAMC,SAAA,CACnBqC,GACDxC,EAAAA,EAAAA,KAACyC,EAAAA,GAAW,CAAC1C,UAAU,KAAKM,QAAQ,aAAahB,MAAOA,YAKlE,KAAKmC,EACH,OACEpB,EAAAA,EAAAA,MAACH,EAAAA,GAAK,CAACF,UAAWiD,EAAAA,GAAM3D,MAAOA,EAAO4D,GAAIJ,EAAM3C,UAAkB,OAAPY,QAAO,IAAPA,OAAO,EAAPA,EAASC,KAAKZ,SAAA,EACvEH,EAAAA,EAAAA,KAACyC,EAAAA,GAAW,CACV1C,UAAU,MACV2C,aAAa,MACbrD,MAAOA,EACPgB,QAAQ,cACRH,UAAU,OACVyC,IAAI,MAENvC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBH,EAAAA,EAAAA,KAACyC,EAAAA,GAAW,CAAC1C,UAAU,KAAKV,MAAOA,EAAOgB,QAAQ,gBAClDL,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWC,UACxBH,EAAAA,EAAAA,KAAA,QAAME,UAAU,OAAMC,SAAEwB,EAAWW,aAK7C,KAAKzB,EACH,OACEb,EAAAA,EAAAA,KAACyC,EAAAA,GAAW,CACVpD,MAAOA,EACPgB,QAAQ,cACRqC,aAAa,QACbxC,UAAS,qCAAAkB,OAAoD,QAApDM,EAA8C,OAAPZ,QAAO,IAAPA,OAAO,EAAPA,EAASC,YAAI,IAAAW,EAAAA,EAAI,IACjEd,OAAQ,SAACuC,GAAW,MAAM,CAAEC,gBAAgB,QAADhC,OAAU+B,EAAW,MAAM,EAAEhD,UAExEC,EAAAA,EAAAA,MAACH,EAAAA,GAAK,CACJF,UAAWiD,EAAAA,GACX3D,MAAOA,EACP4D,GAAIJ,EACJ3C,UAAS,QAAAkB,OAAiB,OAAPN,QAAO,IAAPA,OAAO,EAAPA,EAASE,cAAeb,SAAA,EAE3CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,CAEtBkC,IACAjC,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAAzC,SAAA,CAEgB,OAAZkC,QAAY,IAAZA,OAAY,EAAZA,EAAclB,KAAI,SAAAkC,GAAQ,OACxBrD,EAAAA,EAAAA,KAAA,QAAME,UAAU,WAAUC,SAAqBkD,EAASC,WAAxBD,EAASE,IAAgC,IAI5E,eAGLvD,EAAAA,EAAAA,KAAA,QAAME,UAAU,OAAMC,SAAEwB,EAAWW,KAEjCP,IACA3B,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAAzC,SAAA,CACG,YAAMC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,OAAMC,SAAA,EAACH,EAAAA,EAAAA,KAAA,QAAME,UAAU,mBAAmB,IAAE6B,YAKzE/B,EAAAA,EAAAA,KAACyC,EAAAA,GAAW,CAAC1C,UAAU,KAAKV,MAAOA,EAAOgB,QAAQ,eAEhDM,IAAaX,EAAAA,EAAAA,KAACyC,EAAAA,GAAW,CAAC1C,UAAU,IAAIV,MAAOA,EAAOgB,QAAQ,iBAKxE,QAEE,OADAmD,QAAQC,MAAM,4BAADrC,OAA6BR,EAAM,eAAAQ,OAAcc,EAAU,OAEtElC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAACF,UAAWiD,EAAAA,GAAM3D,MAAOA,EAAO4D,GAAIJ,EAAM3C,UAAkB,OAAPY,QAAO,IAAPA,OAAO,EAAPA,EAASC,KAAKZ,UACvEH,EAAAA,EAAAA,KAAA,MAAAG,SAAK+B,MAIf,C,yFChMe,SAASN,IACpB,IAAM8B,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IAExB,OADAC,EAAAA,EAAAA,IAAqBH,GACdA,CACX,C","sources":["components/Slider.js","shared/PostCard.js","../node_modules/react-intl/lib/components/useIntl.js"],"sourcesContent":["/*\n * Copyright (C) 2007-2022 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { useState } from 'react';\nimport PostCard, { IMAGE_BACKGROUND } from '../shared/PostCard';\nimport { Field } from '@craftercms/experience-builder/react';\nimport { useRecentPosts } from '../shared/hooks';\n\nfunction Slider(props) {\n\n  const {\n    model\n  } = props;\n\n  let posts_o = useRecentPosts();\n  if (props.model.posts_o.length !== 0) {\n    posts_o = props.model.posts_o;\n  }\n\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const component = posts_o[currentIndex];\n\n  return (\n    <Field model={model} className=\"owl-carousel owl-theme owl-loaded home-slider\">\n      <div className=\"owl-stage-outer\">\n        <Field model={model} fieldId=\"posts_o\" className=\"owl-stage\">\n          <Field\n            key={component.craftercms.id}\n            className=\"owl-item active\"\n            model={model}\n            fieldId=\"posts_o\"\n            index={currentIndex}\n            style={{ width: '100%' }}\n          >\n            <PostCard\n              tags=\"Food\"\n              model={component}\n              showBlurb\n              format={IMAGE_BACKGROUND}\n              classes={{ root: 'height-lg', innerWrapper: 'half-to-full' }}\n            />\n          </Field>\n        </Field>\n        <div className=\"owl-dots\">\n          {\n            posts_o?.map((component, index) =>\n              <button\n                key={index}\n                className={`owl-dot ${index === currentIndex ? 'active' : ''}`}\n                onClick={() => setCurrentIndex(index)}\n              ><span /></button>\n            )\n          }\n        </div>\n      </div>\n    </Field>\n  );\n}\n\nexport default Slider;\n","/*\n * Copyright (C) 2007-2022 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { Field, RenderField } from '@craftercms/experience-builder/react';\n\nexport const\n  PORTRAIT = 'portrait',\n  LANDSCAPE = 'landscape',\n  LANDSCAPE_COMPRESSED = 'landscapeCompressed',\n  IMAGE_BACKGROUND = 'imageBackground';\n\nfunction PostCard(props) {\n  const { formatDate } = useIntl();\n  const {\n    classes,\n    format = PORTRAIT,\n    showBlurb = false,\n    numOfComments,\n    model,\n    model: {\n      authorBio_o,\n      headline_s,\n      mainImageAlt_s = '',\n      categories_o,\n      craftercms: {\n        dateModified\n      }\n    }\n  } = props;\n  const authorModel = authorBio_o?.[0];\n  const postMetaCommon = (\n    <div className=\"post-meta\">\n      <Field\n        component=\"span\"\n        model={model}\n        fieldId=\"authorBio_o\"\n        index={0}\n        className=\"author mr-2\"\n      >\n        <Field component=\"span\" model={authorModel}>\n          <RenderField\n            component=\"img\"\n            model={authorModel}\n            renderTarget=\"src\"\n            fieldId=\"profilePic_s\"\n            alt=\"\"\n          />{' '}\n          <RenderField\n            component=\"span\"\n            model={authorModel}\n            fieldId=\"name_s\"\n          />\n        </Field>\n      </Field>\n      {' • '}<span className=\"mr-2\">{formatDate(dateModified)}</span>\n      {\n        numOfComments &&\n        <>\n          {' • '}<span className=\"ml-2\"><span className=\"fa fa-comments\" /> {numOfComments}</span>\n        </>\n      }\n    </div>\n  );\n  const slug = computeSlug(model.craftercms.path);\n  switch (format) {\n    case PORTRAIT:\n      return (\n        <Field\n          component={Link}\n          model={model}\n          to={slug}\n          className={`blog-entry ${classes?.root ?? ''}`}\n        >\n          <div className=\"img-container\">\n            <RenderField\n              component=\"img\"\n              model={model}\n              renderTarget=\"src\"\n              fieldId=\"mainImage_s\"\n              alt={mainImageAlt_s}\n            />\n          </div>\n          <div className=\"blog-content-body\">\n            {postMetaCommon}\n            <RenderField component=\"h2\" model={model} fieldId=\"headline_s\" />\n          </div>\n        </Field>\n      );\n    case LANDSCAPE:\n      return (\n        <div className=\"post-entry-horizontal\">\n          {/* Notice: Adding the ICE to the above element wouldn't stop\n              the link from navigating when clicked */}\n          <Field component={Link} model={model} to={slug} className={classes?.root}>\n            <RenderField\n              model={model}\n              fieldId=\"mainImage_s\"\n              renderTarget=\"style.backgroundImage\"\n              format={(src) => `url(\"${src}\")`}\n              className=\"image\"\n            />\n            <span className=\"text\">\n              {postMetaCommon}\n              <RenderField component=\"h2\" fieldId=\"headline_s\" model={model} />\n            </span>\n          </Field>\n        </div>\n      );\n    case LANDSCAPE_COMPRESSED:\n      return (\n        <Field component={Link} model={model} to={slug} className={classes?.root}>\n          <RenderField\n            component=\"img\"\n            renderTarget=\"src\"\n            model={model}\n            fieldId=\"mainImage_s\"\n            className=\"mr-4\"\n            alt=\"\"\n          />\n          <div className=\"text\">\n            <RenderField component=\"h4\" model={model} fieldId=\"headline_s\" />\n            <div className=\"post-meta\">\n              <span className=\"mr-2\">{formatDate(dateModified)}</span>\n            </div>\n          </div>\n        </Field>\n      );\n    case IMAGE_BACKGROUND:\n      return (\n        <RenderField\n          model={model}\n          fieldId=\"mainImage_s\"\n          renderTarget=\"style\"\n          className={`a-block d-flex align-items-center ${classes?.root ?? ''}`}\n          format={(mainImage_s) => ({ backgroundImage: `url(\"${mainImage_s}\")` })}\n        >\n          <Field\n            component={Link}\n            model={model}\n            to={slug}\n            className={`text ${classes?.innerWrapper}`}\n          >\n            <div className=\"post-meta\">\n              {\n                categories_o &&\n                <>\n                  {\n                    categories_o?.map(category =>\n                      <span className=\"category\" key={category.key}>{category.value_smv}</span>\n                    )\n                  }\n\n                  {' • '}\n                </>\n              }\n              <span className=\"mr-2\">{formatDate(dateModified)}</span>\n              {\n                numOfComments &&\n                <>\n                  {' • '}<span className=\"ml-2\"><span className=\"fa fa-comments\" /> {numOfComments}\n                </span>\n                </>\n              }\n            </div>\n            <RenderField component=\"h3\" model={model} fieldId=\"headline_s\" />\n            {\n              showBlurb && <RenderField component=\"p\" model={model} fieldId=\"blurb_t\" />\n            }\n          </Field>\n        </RenderField>\n      );\n    default:\n      console.error(`Unknown PostCard format \"${format}\" on post \"${headline_s}\"`);\n      return (\n        <Field component={Link} model={model} to={slug} className={classes?.root}>\n          <h2>{headline_s}</h2>\n        </Field>\n      );\n  }\n}\n\nfunction computeSlug(path) {\n  return path\n    .replace(/(\\/site\\/components)|(index\\.xml)/g, '')\n    .replace(/(\\/site\\/website)|(index\\.xml)/g, '')\n    .replace(/(\\/\\/)/g, '/')\n    .replace('.xml', '');\n}\n\nexport default PostCard;\n","import { useContext } from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    const intl = useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n"],"names":["props","_posts_o","model","posts_o","useRecentPosts","length","_useState","useState","_useState2","_slicedToArray","currentIndex","setCurrentIndex","component","_jsx","Field","className","children","_jsxs","fieldId","index","style","width","PostCard","tags","showBlurb","format","IMAGE_BACKGROUND","classes","root","innerWrapper","craftercms","id","map","concat","onClick","PORTRAIT","LANDSCAPE","LANDSCAPE_COMPRESSED","_classes$root","_classes$root2","formatDate","useIntl","_props$format","_props$showBlurb","numOfComments","_props$model","authorBio_o","headline_s","_props$model$mainImag","mainImageAlt_s","categories_o","dateModified","authorModel","postMetaCommon","RenderField","renderTarget","alt","_Fragment","slug","path","replace","Link","to","src","mainImage_s","backgroundImage","category","value_smv","key","console","error","intl","useContext","Context","invariantIntlContext"],"sourceRoot":""}