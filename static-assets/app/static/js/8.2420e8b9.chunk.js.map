{"version":3,"sources":["../node_modules/react-intl/lib/components/createFormattedComponent.js","../node_modules/react-intl/lib/index.js","../../../../../src/internal/operators/catchError.ts","components/Toast.js","pages/Contact.js","shared/PostCard.js","shared/RecentPostsAside.js","shared/SidebarTaxonomies.js","../node_modules/react-intl/lib/components/useIntl.js","../node_modules/react-intl/lib/components/message.js"],"names":["DisplayName","DisplayNameParts","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","createFormattedDateTimePartsComponent","name","ComponentParts","props","React","Context","Consumer","intl","invariantIntlContext","value","children","formatProps","date","Date","formatDateToParts","formatTimeToParts","displayName","createFormattedComponent","Component","formattedValue","Text","textComponent","defineMessages","msgs","Toast","display","text","type","className","role","style","position","top","right","translations","contactSuccess","id","defaultMessage","initialFormData","phone","email","message","initialToastData","Contact","model","levelDescriptor","meta","formatMessage","useIntl","useState","formData","setFormData","toastData","setToastData","showToast","setTimeout","handleChange","target","trim","BaseLayout","component","fieldId","onSubmit","preventDefault","ajax","post","pipe","catchError","error","subscribe","response","messageKey","htmlFor","onChange","required","cols","rows","action","placeholder","RecentPostsAside","PORTRAIT","LANDSCAPE","LANDSCAPE_COMPRESSED","IMAGE_BACKGROUND","PostCard","formatDate","classes","format","showBlurb","numOfComments","authorBio_o","headline_s","mainImageAlt_s","categories_o","dateModified","craftercms","authorModel","postMetaCommon","index","renderTarget","alt","slug","path","replace","Link","to","root","src","mainImage_s","backgroundImage","innerWrapper","map","category","value_smv","key","console","posts","useRecentPosts","SidebarListContent","title","filter","baseUrl","listClass","data","resource","read","filteredTaxonomies","parseDescriptor","taxonomy","items","Array","isArray","item","href","SidebarTaxonomies","useTaxonomiesResource","fallback","screenHeight","SidebarTags","createTaxonomyFilter","SidebarCategories","useContext","shallowEquals","shallowEquals_","defaultFormatMessage","descriptor","values","assign","DEFAULT_INTL_CONFIG","locale","createFormatters","FormattedMessage","nextProps","_a","this","otherProps","nextValues","nextOtherProps","description","tagName","nodes","defaultProps"],"mappings":"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","file":"static/js/8.2420e8b9.chunk.js","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { invariantIntlContext } from '../utils';\nimport { Context } from './injectIntl';\nvar DisplayName;\n(function (DisplayName) {\n    DisplayName[\"formatDate\"] = \"FormattedDate\";\n    DisplayName[\"formatTime\"] = \"FormattedTime\";\n    DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n    DisplayName[\"formatList\"] = \"FormattedList\";\n    // Note that this DisplayName is the locale display name, not to be confused with\n    // the name of the enum, which is for React component display name in dev tools.\n    DisplayName[\"formatDisplayName\"] = \"FormattedDisplayName\";\n})(DisplayName || (DisplayName = {}));\nvar DisplayNameParts;\n(function (DisplayNameParts) {\n    DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\n    DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\n    DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\n    DisplayNameParts[\"formatList\"] = \"FormattedListParts\";\n})(DisplayNameParts || (DisplayNameParts = {}));\nexport const FormattedNumberParts = props => (React.createElement(Context.Consumer, null, (intl) => {\n    invariantIntlContext(intl);\n    const { value, children } = props, formatProps = __rest(props, [\"value\", \"children\"]);\n    return children(intl.formatNumberToParts(value, formatProps));\n}));\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport function createFormattedDateTimePartsComponent(name) {\n    const ComponentParts = props => (React.createElement(Context.Consumer, null, (intl) => {\n        invariantIntlContext(intl);\n        const { value, children } = props, formatProps = __rest(props, [\"value\", \"children\"]);\n        const date = typeof value === 'string' ? new Date(value || 0) : value;\n        const formattedParts = name === 'formatDate'\n            ? intl.formatDateToParts(date, formatProps)\n            : intl.formatTimeToParts(date, formatProps);\n        return children(formattedParts);\n    }));\n    ComponentParts.displayName = DisplayNameParts[name];\n    return ComponentParts;\n}\nexport function createFormattedComponent(name) {\n    const Component = props => (React.createElement(Context.Consumer, null, (intl) => {\n        invariantIntlContext(intl);\n        const { value, children } = props, formatProps = __rest(props, [\"value\", \"children\"]);\n        // TODO: fix TS type definition for localeMatcher upstream\n        const formattedValue = intl[name](value, formatProps);\n        if (typeof children === 'function') {\n            return children(formattedValue);\n        }\n        const Text = intl.textComponent || React.Fragment;\n        return React.createElement(Text, null, formattedValue);\n    }));\n    Component.displayName = DisplayName[name];\n    return Component;\n}\n","export function defineMessages(msgs) {\n    return msgs;\n}\nimport { createFormattedComponent, createFormattedDateTimePartsComponent, } from './components/createFormattedComponent';\nexport { default as injectIntl, Provider as RawIntlProvider, Context as IntlContext, } from './components/injectIntl';\nexport { default as useIntl } from './components/useIntl';\nexport { default as IntlProvider, createIntl } from './components/provider';\n// IMPORTANT: Explicit here to prevent api-extractor from outputing `import('./types').CustomFormatConfig`\nexport const FormattedDate = createFormattedComponent('formatDate');\nexport const FormattedTime = createFormattedComponent('formatTime');\nexport const FormattedNumber = createFormattedComponent('formatNumber');\nexport const FormattedList = createFormattedComponent('formatList');\nexport const FormattedDisplayName = createFormattedComponent('formatDisplayName');\nexport const FormattedDateParts = createFormattedDateTimePartsComponent('formatDate');\nexport const FormattedTimeParts = createFormattedDateTimePartsComponent('formatTime');\nexport { FormattedNumberParts } from './components/createFormattedComponent';\nexport { default as FormattedRelativeTime } from './components/relative';\nexport { default as FormattedPlural } from './components/plural';\nexport { default as FormattedMessage } from './components/message';\nexport { createIntlCache } from './utils';\nexport { ReactIntlError, ReactIntlErrorCode } from './error';\n","import { innerFrom } from '../observable/innerFrom';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\nexport function catchError(selector) {\n    return operate(function (source, subscriber) {\n        var innerSub = null;\n        var syncUnsub = false;\n        var handledResult;\n        innerSub = source.subscribe(new OperatorSubscriber(subscriber, undefined, undefined, function (err) {\n            handledResult = innerFrom(selector(err, catchError(selector)(source)));\n            if (innerSub) {\n                innerSub.unsubscribe();\n                innerSub = null;\n                handledResult.subscribe(subscriber);\n            }\n            else {\n                syncUnsub = true;\n            }\n        }));\n        if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            handledResult.subscribe(subscriber);\n        }\n    });\n}\n//# sourceMappingURL=catchError.js.map","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\n\nfunction Toast(props) {\n  const {\n    display,\n    text,\n    type\n  } = props;\n\n  const style = {\n    position: 'fixed',\n    top: 10,\n    right: 10\n  }\n\n  return (\n    <>\n      {\n        display &&\n        <div className={`alert alert-${type}`} role=\"alert\" style={style}>\n          {text}\n        </div>\n      }\n    </>\n  );\n}\n\nexport default Toast;","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { useState } from 'react';\nimport BaseLayout from '../shared/BaseLayout';\nimport RecentPostsAside from '../shared/RecentPostsAside';\nimport { SidebarCategories, SidebarTags } from '../shared/SidebarTaxonomies';\nimport { ajax } from 'rxjs/ajax';\nimport { catchError } from 'rxjs/operators';\nimport Toast from '../components/Toast';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { RenderField } from '@craftercms/experience-builder/react';\n\nconst translations = defineMessages({\n  contactSuccess: {\n    id: 'contact.contactSuccess',\n    defaultMessage: 'Message successfully sent!'\n  }\n});\n\nconst initialFormData = {\n  name: '',\n  phone: '',\n  email: '',\n  message: ''\n}\n\nconst initialToastData = {\n  display: false,\n  type: '',\n  text: ''\n}\n\nfunction Contact(props) {\n  const {\n    model,\n    meta: {\n      levelDescriptor\n    }\n  } = props;\n\n  const { formatMessage } = useIntl();\n  const [formData, setFormData] = useState(initialFormData);\n  const [toastData, setToastData] = useState(initialToastData);\n  const showToast = (text, type) => {\n    setToastData({\n      display: true,\n      text,\n      type\n    });\n    setTimeout(() => {\n      setToastData(initialToastData);\n    }, 3000);\n  }\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const handleSubmit = function(e) {\n    e.preventDefault();\n\n    ajax.post(\n      '/api/contactus.json',\n      formData,\n      {\n        'Content-Type': 'application/json'\n      }\n    ).pipe(\n      catchError(error => [error])\n    ).subscribe(response => {\n      if (response.name === 'AjaxError') {\n        showToast('There was an error sending the message', 'danger');\n      } else {\n        setFormData(initialFormData);\n        showToast(formatMessage(translations[response.response.messageKey]), 'success');\n      }\n    });\n  }\n\n  return (\n    <BaseLayout model={levelDescriptor}>\n      <section className=\"site-section\">\n        <div className=\"container\">\n          <div className=\"row mb-4\">\n            <div className=\"col-md-6\">\n              <RenderField component=\"h1\" model={model} fieldId=\"headline_s\" />\n              <RenderField component=\"p\" model={model} fieldId=\"message_t\" />\n            </div>\n          </div>\n          <div className=\"row blog-entries\">\n            <div className=\"col-md-12 col-lg-8 main-content\">\n\n              <form onSubmit={handleSubmit}>\n                <div className=\"row\">\n                  <div className=\"col-md-12 form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input\n                      type=\"text\"\n                      id=\"name\"\n                      name=\"name\"\n                      className=\"form-control\"\n                      value={formData.name}\n                      onChange={handleChange}\n                      required\n                    />\n                  </div>\n                  <div className=\"col-md-12 form-group\">\n                    <label htmlFor=\"phone\">Phone</label>\n                    <input\n                      type=\"text\"\n                      id=\"phone\"\n                      name=\"phone\"\n                      className=\"form-control\"\n                      value={formData.phone}\n                      onChange={handleChange}\n                    />\n                  </div>\n                  <div className=\"col-md-12 form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      className=\"form-control\"\n                      value={formData.email}\n                      onChange={handleChange}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-12 form-group\">\n                    <label htmlFor=\"message\">Write Message</label>\n                    <textarea\n                      name=\"message\"\n                      id=\"message\"\n                      className=\"form-control\"\n                      cols=\"30\"\n                      rows=\"8\"\n                      value={formData.message}\n                      onChange={handleChange}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-6 form-group\">\n                    <input type=\"submit\" value=\"Send Message\" className=\"btn btn-primary\"/>\n                  </div>\n                </div>\n              </form>\n\n            </div>\n\n            <div className=\"col-md-12 col-lg-4 sidebar\">\n              <div className=\"sidebar-box search-form-wrap\">\n                <form action=\"#\" className=\"search-form\">\n                  <div className=\"form-group\">\n                    <span className=\"icon fa fa-search\"/>\n                    <input type=\"text\" className=\"form-control\" id=\"s\" placeholder=\"Type a keyword and hit enter\"/>\n                  </div>\n                </form>\n              </div>\n\n              <RecentPostsAside />\n\n              <SidebarCategories/>\n\n              <SidebarTags/>\n\n            </div>\n\n          </div>\n        </div>\n      </section>\n      <Toast\n        display={toastData.display}\n        type={toastData.type}\n        text={toastData.text}\n      />\n    </BaseLayout>\n  );\n}\n\nexport default Contact;\n\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { Field, RenderField } from '@craftercms/experience-builder/react';\n\nexport const\n  PORTRAIT = 'portrait',\n  LANDSCAPE = 'landscape',\n  LANDSCAPE_COMPRESSED = 'landscapeCompressed',\n  IMAGE_BACKGROUND = 'imageBackground';\n\nfunction PostCard(props) {\n  const { formatDate } = useIntl();\n  const {\n    classes,\n    format = PORTRAIT,\n    showBlurb = false,\n    numOfComments,\n    model,\n    model: {\n      authorBio_o,\n      headline_s,\n      mainImageAlt_s = '',\n      categories_o,\n      craftercms: {\n        dateModified\n      }\n    }\n  } = props;\n  const authorModel = authorBio_o?.[0];\n  const postMetaCommon = (\n    <div className=\"post-meta\">\n      <Field\n        component=\"span\"\n        model={model}\n        fieldId=\"authorBio_o\"\n        index={0}\n        className=\"author mr-2\"\n      >\n        <Field component=\"span\" model={authorModel}>\n          <RenderField\n            component=\"img\"\n            model={authorModel}\n            renderTarget=\"src\"\n            fieldId=\"profilePic_s\"\n            alt=\"\"\n          />{' '}\n          <RenderField\n            component=\"span\"\n            model={authorModel}\n            fieldId=\"name_s\"\n          />\n        </Field>\n      </Field>\n      {' • '}<span className=\"mr-2\">{formatDate(dateModified)}</span>\n      {\n        numOfComments &&\n        <>\n          {' • '}<span className=\"ml-2\"><span className=\"fa fa-comments\" /> {numOfComments}</span>\n        </>\n      }\n    </div>\n  );\n  const slug = computeSlug(model.craftercms.path);\n  switch (format) {\n    case PORTRAIT:\n      return (\n        <Field\n          component={Link}\n          model={model}\n          to={slug}\n          className={`blog-entry ${classes?.root ?? ''}`}\n        >\n          <div className=\"img-container\">\n            <RenderField\n              component=\"img\"\n              model={model}\n              renderTarget=\"src\"\n              fieldId=\"mainImage_s\"\n              alt={mainImageAlt_s}\n            />\n          </div>\n          <div className=\"blog-content-body\">\n            {postMetaCommon}\n            <RenderField component=\"h2\" model={model} fieldId=\"headline_s\" />\n          </div>\n        </Field>\n      );\n    case LANDSCAPE:\n      return (\n        <div className=\"post-entry-horizontal\">\n          {/* Notice: Adding the ICE to the above element wouldn't stop\n              the link from navigating when clicked */}\n          <Field component={Link} model={model} to={slug} className={classes?.root}>\n            <RenderField\n              model={model}\n              fieldId=\"mainImage_s\"\n              renderTarget=\"style.backgroundImage\"\n              format={(src) => `url(\"${src}\")`}\n              className=\"image\"\n            />\n            <span className=\"text\">\n              {postMetaCommon}\n              <RenderField component=\"h2\" fieldId=\"headline_s\" model={model} />\n            </span>\n          </Field>\n        </div>\n      );\n    case LANDSCAPE_COMPRESSED:\n      return (\n        <Field component={Link} model={model} to={slug} className={classes?.root}>\n          <RenderField\n            component=\"img\"\n            renderTarget=\"src\"\n            model={model}\n            fieldId=\"mainImage_s\"\n            className=\"mr-4\"\n            alt=\"\"\n          />\n          <div className=\"text\">\n            <RenderField component=\"h4\" model={model} fieldId=\"headline_s\" />\n            <div className=\"post-meta\">\n              <span className=\"mr-2\">{formatDate(dateModified)}</span>\n            </div>\n          </div>\n        </Field>\n      );\n    case IMAGE_BACKGROUND:\n      return (\n        <RenderField\n          model={model}\n          fieldId=\"mainImage_s\"\n          renderTarget=\"style\"\n          className={`a-block d-flex align-items-center ${classes?.root ?? ''}`}\n          format={(mainImage_s) => ({ backgroundImage: `url(\"${mainImage_s}\")` })}\n        >\n          <Field\n            component={Link}\n            model={model}\n            to={slug}\n            className={`text ${classes?.innerWrapper}`}\n          >\n            <div className=\"post-meta\">\n              {\n                categories_o &&\n                <>\n                  {\n                    categories_o?.map(category =>\n                      <span className=\"category\" key={category.key}>{category.value_smv}</span>\n                    )\n                  }\n\n                  {' • '}\n                </>\n              }\n              <span className=\"mr-2\">{formatDate(dateModified)}</span>\n              {\n                numOfComments &&\n                <>\n                  {' • '}<span className=\"ml-2\"><span className=\"fa fa-comments\" /> {numOfComments}\n                </span>\n                </>\n              }\n            </div>\n            <RenderField component=\"h3\" model={model} fieldId=\"headline_s\" />\n            {\n              showBlurb && <RenderField component=\"p\" model={model} fieldId=\"blurb_t\" />\n            }\n          </Field>\n        </RenderField>\n      );\n    default:\n      console.error(`Unknown PostCard format \"${format}\" on post \"${headline_s}\"`);\n      return (\n        <Field component={Link} model={model} to={slug} className={classes?.root}>\n          <h2>{headline_s}</h2>\n        </Field>\n      );\n  }\n}\n\nfunction computeSlug(path) {\n  return path\n    .replace(/(\\/site\\/components)|(index\\.xml)/g, '')\n    .replace(/(\\/site\\/website)|(index\\.xml)/g, '')\n    .replace(/(\\/\\/)/g, '/')\n    .replace('.xml', '');\n}\n\nexport default PostCard;\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PostCard, { LANDSCAPE_COMPRESSED } from './PostCard';\nimport { useRecentPosts } from './hooks';\n\nfunction RecentPostsAside() {\n  const posts = useRecentPosts();\n  return (\n    <div className=\"sidebar-box\">\n      <h3 className=\"heading\">\n        <FormattedMessage\n          id=\"common.popularPostsTitle\"\n          defaultMessage=\"Latest Posts\"\n        />\n      </h3>\n      <div className=\"post-entry-sidebar\">\n        <ul>\n          {\n            posts?.map((post) =>\n              <li key={post.craftercms.id}>\n                <PostCard model={post} format={LANDSCAPE_COMPRESSED} />\n              </li>\n            )\n          }\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default RecentPostsAside;\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { Suspense } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  useTaxonomiesResource\n} from './hooks';\nimport { createTaxonomyFilter } from './utils';\nimport CircularProgressSpinner from './CircularProgressSpinner';\nimport { parseDescriptor } from '@craftercms/content';\nimport { Field } from '@craftercms/experience-builder/react';\n\nfunction SidebarListContent(props) {\n  const {\n    title,\n    filter,\n    baseUrl,\n    listClass,\n    resource\n  } = props;\n  const { data } = resource.read();\n  const taxonomies = parseDescriptor(data.taxonomy.items);\n  const filteredTaxonomies = taxonomies.filter(filter)[0];\n\n  return (\n    Array.isArray(filteredTaxonomies?.items?.item) && filteredTaxonomies.items.item.length > 0 &&\n    <div className=\"sidebar-box\">\n      <h3 className=\"heading\">\n        {title}\n      </h3>\n      <Field\n        component=\"ul\"\n        model={filteredTaxonomies}\n        className={`${listClass} clearfix`}\n      >\n        {\n          filteredTaxonomies?.items.item.map((taxonomy) =>\n            <li key={taxonomy.key}><a href={`${baseUrl}/${taxonomy.key}`}>{taxonomy.value}</a></li>\n          )\n        }\n      </Field>\n    </div>\n  );\n}\n\nexport function SidebarTaxonomies(props) {\n  let resource = useTaxonomiesResource();\n  return (\n    <Suspense fallback={<CircularProgressSpinner screenHeight={false} />}>\n      <SidebarListContent\n        {...props}\n        resource={resource}\n      />\n    </Suspense>\n  );\n}\n\nexport function SidebarTags() {\n  return (\n    <SidebarTaxonomies\n      title={<FormattedMessage\n        id=\"sidebarTags.tagsSectionTitle\"\n        defaultMessage=\"Tags\"\n      />}\n      filter={createTaxonomyFilter('tags.xml')}\n      baseUrl='/tag'\n      listClass='tags'\n    />\n  );\n}\n\nexport function SidebarCategories() {\n  return (\n    <SidebarTaxonomies\n      title={<FormattedMessage\n        id=\"sidebarCategories.categoriesSectionTitle\"\n        defaultMessage=\"Categories\"\n      />}\n      filter={createTaxonomyFilter('categories.xml')}\n      baseUrl='/category'\n      listClass='categories'\n    />\n  );\n}\n","import { useContext } from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    const intl = useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { formatMessage } from '../formatters/message';\nimport { invariantIntlContext, DEFAULT_INTL_CONFIG, createFormatters, } from '../utils';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nconst shallowEquals = shallowEquals_.default || shallowEquals_;\nfunction defaultFormatMessage(descriptor, values) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error('[React Intl] Could not find required `intl` object. <IntlProvider> needs to exist in the component ancestry. Using default message as fallback.');\n    }\n    return formatMessage(Object.assign(Object.assign({}, DEFAULT_INTL_CONFIG), { locale: 'en' }), createFormatters(), descriptor, values);\n}\nclass FormattedMessage extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        const _a = this.props, { values } = _a, otherProps = __rest(_a, [\"values\"]);\n        const { values: nextValues } = nextProps, nextOtherProps = __rest(nextProps, [\"values\"]);\n        return (!shallowEquals(nextValues, values) ||\n            !shallowEquals(otherProps, nextOtherProps));\n    }\n    render() {\n        return (React.createElement(Context.Consumer, null, (intl) => {\n            if (!this.props.defaultMessage) {\n                invariantIntlContext(intl);\n            }\n            const { formatMessage = defaultFormatMessage, textComponent: Text = React.Fragment, } = intl || {};\n            const { id, description, defaultMessage, values, children, tagName: Component = Text, } = this.props;\n            const descriptor = { id, description, defaultMessage };\n            let nodes = formatMessage(descriptor, values);\n            if (!Array.isArray(nodes)) {\n                nodes = [nodes];\n            }\n            if (typeof children === 'function') {\n                return children(...nodes);\n            }\n            if (Component) {\n                // Needs to use `createElement()` instead of JSX, otherwise React will\n                // warn about a missing `key` prop with rich-text message formatting.\n                return React.createElement(Component, null, ...nodes);\n            }\n            return nodes;\n        }));\n    }\n}\nFormattedMessage.displayName = 'FormattedMessage';\nFormattedMessage.defaultProps = {\n    values: {},\n};\nexport default FormattedMessage;\n"],"sourceRoot":""}